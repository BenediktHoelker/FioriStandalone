<mvc:View controllerName="ts.controller.Detail" xmlns="sap.m" xmlns:mvc="sap.ui.core.mvc" xmlns:semantic="sap.m.semantic"
	xmlns:footerbar="sap.ushell.ui.footerbar">
	<semantic:DetailPage id="page" navButtonPress="onNavBack" showNavButton="{device>/system/phone}" title="{i18n>detailTitle}"
		busy="{detailView>/busy}" busyIndicatorDelay="{detailView>/delay}">
		<semantic:content>
			<ObjectHeader id="objectHeader" title="{Carrid} - {Connid} - {Planetype} - {Fldate}" number="Available: Economy [{= ${Seatsmax} - ${Seatsocc}}], Business [{= ${SeatsmaxB} - ${SeatsoccB}}], First [{= ${SeatsmaxF} - ${SeatsoccF}}]"></ObjectHeader>
			<IconTabBar id="iconTabBar" class="sapUiResponsiveContentPadding">
				<items>
					<!--<IconTabFilter id="iconTabBarFilter1" icon="sap-icon://hint" tooltip="{i18n>detailIconTabBarInfo}"></IconTabFilter>
					<IconTabFilter id="iconTabBarFilter2" icon="sap-icon://attachment" tooltip="{i18n>detailIconTabBarAttachments}"></IconTabFilter>-->
					<IconTabFilter
                  key="bookedSeats"
                  showAll="true"
                  count="{= ${Seatsocc} + ${SeatsoccB} + ${SeatsoccF}}"
                  text="Economy Class"/>
               <IconTabSeparator/>
               <IconTabFilter
                  key="inStock"
                  icon="sap-icon://message-success"
                  iconColor="Positive"
                  count="{worklistView>/inStock}"
                  text="{i18n>WorklistFilterInStock}"/>
               <IconTabFilter
                  key="shortage"
                  icon="sap-icon://message-warning"
                  iconColor="Critical"
                  count="{worklistView>/shortage}"
                  text="{i18n>WorklistFilterShortage}"/>
               <IconTabFilter
                  key="outOfStock"
                  icon="sap-icon://message-error"
                  iconColor="Negative"
                  count="{worklistView>/outOfStock}"
                  text="{i18n>WorklistFilterOutOfStock}"/>
				</items>
			</IconTabBar>
			<!--<List id="lineItemsList" width="auto"  items="{SBOOK}"
				busyIndicatorDelay="{detailView>/lineItemTableDelay}"  updateFinished="onListUpdateFinished" noDataText="{i18n>detailLineItemTableNoDataText}"> 
				<infoToolbar>
					<Toolbar id="lineItemsToolbar">
						<Title id="lineItemsHeader" text="{detailView>/lineItemListTitle}"/>
					</Toolbar>
				</infoToolbar>
				<items>
					<ObjectListItem type="Active" press="onEditBooking" title="{Bookid} - {Passname}"
						number="{ path: 'Loccuram', formatter: '.formatter.currencyValue'}"></ObjectListItem>
				</items>
			</List>-->
			<Table id="lineItemsList" width="auto" items="{path: 'SBOOKSet'}" updateFinished="onListUpdateFinished" mode="Delete" delete="onDelete" swipe="onDelete"
				noDataText="{i18n>detailLineItemTableNoDataText}" busyIndicatorDelay="{detailView>/lineItemTableDelay}" class="sapUiResponsiveMargin sapUiNoMarginTop">
				<headerToolbar>
					<Toolbar id="lineItemsToolbar">
						<Title id="lineItemsHeader" text="{detailView>/lineItemListTitle}"/>
					</Toolbar>
				</headerToolbar>
				<columns>
					<Column>
						<Text text="{i18n>detailLineItemTableIDColumn}"/>
					</Column>
					<Column minScreenWidth="Tablet" demandPopin="true">
						<Text text="{i18n>detailLineItemTableClassColumn}"/>
					</Column>
					<Column minScreenWidth="Tablet" demandPopin="true">
						<Text text="{i18n>detailLineItemTablePriceColumn}"/>
					</Column>
				</columns>
				<items>
					<ColumnListItem type="Navigation" press="onEditBooking">
						<cells>
							<ObjectIdentifier title="{Passname}" text="{Bookid}"/>
							<ObjectNumber number="{ path: 'Class' }"/>
							<ObjectNumber number="{ path: 'Loccuram', formatter: '.formatter.currencyValue' }" unit="{Loccurkey}"/>
						</cells>
					</ColumnListItem>
				</items>
			</Table>
		</semantic:content>
		<!--<semantic:editAction>
			<semantic:EditAction text="Book" press="onCreateBooking"/>
		</semantic:editAction>-->
		<semantic:customFooterContent>
			<Button type="Emphasized" enabled="true" press="onCreateBooking" text="Book"/>
		</semantic:customFooterContent>
		<!--<semantic:positiveAction>
					<semantic:PositiveAction text="Book" press="onCreateBooking"/>
				</semantic:positiveAction>-->
		<semantic:sendEmailAction>
			<semantic:SendEmailAction id="shareEmail" press="onShareEmailPress"/>
		</semantic:sendEmailAction>
		<semantic:shareInJamAction>
			<semantic:ShareInJamAction id="shareInJam" visible="{FLP>/isShareInJamActive}" press="onShareInJamPress"/>
		</semantic:shareInJamAction>
	</semantic:DetailPage>
</mvc:View>